from fastapi import APIRouter, Depends, UploadFile, File, HTTPException
from pydantic import BaseModel
from routers.auth import get_current_user
from utils.malware_scanner import scan_file_virustotal, scan_url_virustotal, basic_file_analysis
import aiofiles
import os

router = APIRouter()

UPLOAD_DIR = "static/uploads"
os.makedirs(UPLOAD_DIR, exist_ok=True)

class URLScanRequest(BaseModel):
    url: str

@router.post("/scan-file")
async def scan_file(
    file: UploadFile = File(...),
    current_user: dict = Depends(get_current_user)
):
    try:
        file_path = os.path.join(UPLOAD_DIR, file.filename)
        
        async with aiofiles.open(file_path, 'wb') as f:
            content = await file.read()
            await f.write(content)
        
        # Perform basic analysis
        basic_result = basic_file_analysis(file_path)
        
        # Perform VirusTotal scan
        vt_result = scan_file_virustotal(file_path)
        
        # Clean up
        os.remove(file_path)
        
        return {
            "filename": file.filename,
            "basic_analysis": basic_result,
            "virustotal_scan": vt_result
        }
        
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))

@router.post("/scan-url")
async def scan_url(
    data: URLScanRequest,
    current_user: dict = Depends(get_current_user)
):
    result = scan_url_virustotal(data.url)
    return result