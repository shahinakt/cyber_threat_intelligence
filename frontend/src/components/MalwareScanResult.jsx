import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import './MalwareScanResult.css';

const MalwareScanResult = () => {
  const { scanId } = useParams();
  const navigate = useNavigate();
  const [scanResult, setScanResult] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const token = localStorage.getItem('token');
    if (!token) {
      navigate('/login');
      return;
    }

    if (scanId) {
      fetchScanResult(scanId, token);
    }
  }, [scanId, navigate]);

  const fetchScanResult = async (id, token) => {
    try {
      const response = await fetch(`/api/scans/${id}`, {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });

      if (response.ok) {
        const data = await response.json();
        setScanResult(data);
      }
    } catch (err) {
      console.error('Error fetching scan result:', err);
    } finally {
      setLoading(false);
    }
  };

  const handleBackToDashboard = () => {
    navigate('/dashboard');
  };

  const handleNewScan = () => {
    navigate('/scan');
  };

  if (loading) {
    return <div className="loading">Loading scan results...</div>;
  }

  if (!scanResult) {
    return (
      <div className="error-container">
        <h2>Scan Not Found</h2>
        <button onClick={handleBackToDashboard} className="btn-primary">
          Back to Dashboard
        </button>
      </div>
    );
  }

  const isThreat = scanResult.status === 'Threat Detected';
  const isClean = scanResult.status === 'Clean';

  return (
    <div className="scan-result-container">
      <div className="result-card">
        <div className={`result-icon ${isThreat ? 'threat' : 'clean'}`}>
          {isThreat ? '⚠️' : '✓'}
        </div>

        <h1 className={`result-title ${isThreat ? 'threat' : 'clean'}`}>
          {scanResult.status}
        </h1>

        <div className="file-info">
          <h3>File Details</h3>
          <div className="info-grid">
            <div className="info-item">
              <span className="label">File Name:</span>
              <span className="value">{scanResult.fileName}</span>
            </div>
            <div className="info-item">
              <span className="label">File Size:</span>
              <span className="value">{scanResult.fileSize}</span>
            </div>
            <div className="info-item">
              <span className="label">File Type:</span>
              <span className="value">{scanResult.fileType}</span>
            </div>
            <div className="info-item">
              <span className="label">Scan Date:</span>
              <span className="value">
                {new Date(scanResult.scanDate).toLocaleString()}
              </span>
            </div>
          </div>
        </div>

        <div className="scan-details">
          <h3>Scan Analysis</h3>
          <div className="analysis-section">
            <div className="analysis-item">
              <span className="label">Risk Level:</span>
              <span className={`risk-badge ${scanResult.riskLevel?.toLowerCase()}`}>
                {scanResult.riskLevel || 'None'}
              </span>
            </div>
            <div className="analysis-item">
              <span className="label">Scan Engine:</span>
              <span className="value">{scanResult.scanEngine || 'Default'}</span>
            </div>
            <div className="analysis-item">
              <span className="label">Signatures Checked:</span>
              <span className="value">{scanResult.signaturesChecked || 'N/A'}</span>
            </div>
          </div>

          {isThreat && scanResult.threats && scanResult.threats.length > 0 && (
            <div className="threats-detected">
              <h4>Threats Found:</h4>
              <ul>
                {scanResult.threats.map((threat, index) => (
                  <li key={index} className="threat-item">
                    <strong>{threat.name}</strong>
                    <p>{threat.description}</p>
                    <span className="severity">{threat.severity}</span>
                  </li>
                ))}
              </ul>
            </div>
          )}

          {isClean && (
            <div className="clean-message">
              <p>No threats detected. Your file is safe to use.</p>
            </div>
          )}
        </div>

        <div className="result-actions">
          <button onClick={handleNewScan} className="btn-primary">
            Scan Another File
          </button>
          <button onClick={handleBackToDashboard} className="btn-secondary">
            Back to Dashboard
          </button>
        </div>

        {isThreat && (
          <div className="recommendations">
            <h3>Recommended Actions</h3>
            <ul>
              <li>Delete the file immediately</li>
              <li>Run a full system scan</li>
              <li>Change passwords for sensitive accounts</li>
              <li>Monitor your system for unusual activity</li>
            </ul>
          </div>
        )}
      </div>
    </div>
  );
};

export default MalwareScanResult;